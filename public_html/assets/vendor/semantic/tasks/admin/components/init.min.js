var gulp=require("gulp"),console=require("better-console"),del=require("del"),fs=require("fs"),path=require("path"),git=require("gulp-git"),githubAPI=require("github"),mkdirp=require("mkdirp"),github=require("../../config/admin/github.js"),release=require("../../config/admin/release"),project=require("../../config/project/release"),oAuth=fs.existsSync(__dirname+"/../../config/admin/oauth.js")?require("../../config/admin/oauth"):false,version=project.version;module.exports=function(f){var b=-1,c=release.components.length,e,d,a;if(!oAuth){console.error("Must add oauth token for GitHub in tasks/config/admin/oauth.js");return}a=function(){b=b+1;if(b>=c){f();return}var i=release.components[b];outputDirectory=path.resolve(release.outputRoot+i),capitalizedComponent=i.charAt(0).toUpperCase()+i.slice(1),repoName=release.componentRepoRoot+capitalizedComponent,gitOptions={cwd:outputDirectory},pullOptions={args:"-q",cwd:outputDirectory,quiet:true},resetOptions={args:"-q --hard",cwd:outputDirectory,quiet:true},gitURL="https://github.com/"+release.org+"/"+repoName+".git",repoURL="https://github.com/"+release.org+"/"+repoName+"/",localRepoSetup=fs.existsSync(path.join(outputDirectory,".git"));console.log("Processing repository: "+outputDirectory);if(!fs.existsSync(outputDirectory)){mkdirp.sync(outputDirectory)}if(release.outputRoot.search("../repos")==0){console.info("Cleaning dir",outputDirectory);del.sync([outputDirectory+"**/*"],{silent:true,force:true})}function n(){if(localRepoSetup){k()}else{l()}}function l(){console.info("Initializing repository for "+i);git.init(gitOptions,function(o){if(o){console.error("Error initializing repo",o)}k()})}function j(){console.info("Creating GitHub repo "+repoURL);github.repos.createFromOrg({org:release.org,name:repoName,homepage:release.homepage},function(){n()})}function k(){console.info("Adding remote origin as "+gitURL);git.addRemote("origin",gitURL,gitOptions,function(){h()})}function h(){console.info("Pulling "+i+" files");git.pull("origin","master",pullOptions,function(o){g()})}function g(){console.info("Resetting files to head");git.reset("HEAD",resetOptions,function(o){m()})}function m(){global.clearTimeout(e);e=global.setTimeout(function(){a()},0)}if(localRepoSetup){h()}else{n()}};a()};